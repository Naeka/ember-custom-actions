name: CI

on:
  push:
    branches:
      - master
      - 'fix-*'
  pull_request: {}

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Volta
        uses: volta-cli/action@v1

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{
            hashFiles('**/yarn.lock'
            ) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Lint
        run: yarn lint

  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome, firefox]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Volta
        uses: volta-cli/action@v1

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{
            hashFiles('**/yarn.lock'
            ) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Test
        run: yarn test:ember --launch ${{ matrix.browser }}

  floating-dependencies:
    name: Floating Dependencies
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome, firefox]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Volta
        uses: volta-cli/action@v1

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{
            hashFiles('**/yarn.lock'
            ) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'
      - name: Test
        run: yarn test:ember --launch ${{ matrix.browser }}

  try-scenarios:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs: test
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        ember-try-scenario:
          - ember-lts-3.24
          - ember-lts-3.28
          - ember-release
          - ember-classic
          - embroider-safe
          - embroider-optimized
        allow-failure: [false]
        include:
          - ember-try-scenario: ember-beta
            allow-failure: true
          - ember-try-scenario: ember-canary
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Volta
        uses: volta-cli/action@v1

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{
            hashFiles('**/yarn.lock'
            ) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        if: |
          steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Test
        env:
          EMBER_TRY_SCENARIO: ${{ matrix.ember-try-scenario }}
        run: node_modules/.bin/ember try:one $EMBER_TRY_SCENARIO
